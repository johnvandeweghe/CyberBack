openapi: 3.0.0
info:
  version: 0.1.0
  title: Cyber Wars API
servers:
  - url: No Production URL yet
paths:
  /game:
    post:
      summary: Create a game
      operationId: createGame
      tags:
        - game
      responses:
        '200':
          description: 'The meta information about a game, including map tile data.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
  '/game/{gameId}':
    get:
      summary: Get a specific game you know the ID for.
      operationId: listGame
      tags:
        - game
      parameters:
        - name: gameId
          in: path
          description: Which game's ID to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: 'The meta information about a game, including map tile data.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '404':
          description: The game could not be found.
  /player:
    post:
      summary: Add a player to a game
      operationId: addPlayer
      tags:
        - game
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gameId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: Player information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Player'
  '/units/{gameId}':
    get:
      summary: Get units for a game.
      operationId: listUnits
      tags:
        - game
      parameters:
        - name: gameId
          in: path
          description: Which game's units to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Information about units in the current game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Units'
        '404':
          description: The game could not be found.
  /turns:
    post:
      summary: Start a turn
      operationId: startTurn
      tags:
        - game
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                playerId:
                  type: string
                  format: uuid
      responses:
        '200':
          description: The turn that was created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turn'
        '403':
          description: It is not your turn.
        '404':
          description: The game could not be found.
  '/turns/{turnId}':
    patch:
      summary: Update a turn (used to end a turn)
      operationId: updateTurn
      tags:
        - game
      parameters:
        - name: turnId
          in: path
          description: Which turn to update.
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  example: turn-complete
      responses:
        '200':
          description: Information about units in the current game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Turn'
        '403':
          description: It is not your turn.
        '404':
          description: The turn could not be found.
  /unitAction:
    post:
      summary: Take an action as a unit on a turn.
      operationId: createUnitAction
      tags:
        - game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnitAction'
      responses:
        '200':
          description: Information about units in the current game
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnitAction'
        '403':
          description: 'It is not your turn, or the unit is out of action points'
        '404':
          description: The turn or unit could not be found.
components:
  schemas:
    Game:
      required:
        - id
        - playerNumber
        - turnNumber
        - map
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 602aff3a-5427-48d5-9865-6cb92bcbef54
        playerNumber:
          type: integer
          format: int32
          example: 1
          minimum: 1
        turnNumber:
          type: integer
          format: int32
          example: 3
          minimum: 0
        map:
          type: object
          required:
            - id
            - tiles
          properties:
            id:
              type: string
              format: uuid
              example: 80391e9e-5cd7-4dbc-9c71-dfca074a21e2
            tiles:
              type: array
              items:
                type: object
                required:
                  - type
                  - owner
                properties:
                  type:
                    type: string
                    example: concrete
                    enum:
                      - "concrete"
                  owner:
                    type: integer
                    format: int32
                    example: 1
                    minimum: 1
    Coordinates:
      type: object
      required:
        - 'x'
        - 'y'
      properties:
        'x':
          type: integer
          minimum: 0
        'y':
          type: integer
          minimum: 0
    Units:
      type: array
      items:
        $ref: '#/components/schemas/Unit'
    Unit:
      type: object
      required:
        - id
        - attack
        - defense
        - health
        - unitType
        - minRange
        - maxRange
        - owner
      properties:
        id:
          type: string
          format: uuid
        attack:
          type: integer
          format: int32
          example: 8
          minimum: 0
        defense:
          type: integer
          format: int32
          example: 15
          minimum: 0
        health:
          type: integer
          format: int32
          example: 40
          minimum: 0
        unitType:
          type: string
          example: magic
          enum:
            - "magic"
            - "swords"
            - "guns"
        minRange:
          type: integer
          format: int32
          example: 2
          minimum: 0
        maxRange:
          type: integer
          format: int32
          example: 4
          minimum: 0
        owner:
          type: integer
          format: int32
          example: 1
          minimum: 1
        coordinates:
          $ref: "#/components/schemas/Coordinates"
    Player:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: uuid
    Turn:
      type: object
      required:
        - id
        - status
      properties:
        id:
          type: string
          format: uuid
        status:
          type: string
          enum:
            - "in-progress"
            - "turn-complete"
          example: in-progress
    UnitAction:
      type: object
      required:
        - unitId
        - turnId
        - type
      properties:
        unitId:
          type: string
          format: uuid
        turnId:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - "move"
            - "attack"
          example: move
        args:
          oneOf:
           - $ref: "#/components/schemas/MoveActionArgs"
          description: Varies based on type
    MoveActionArgs:
      type: object
      properties:
       path:
         type: array
         items:
           $ref: "#/components/schemas/Coordinates"
